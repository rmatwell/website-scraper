buildscript {
    repositories {
        jcenter()

	ivy {
            url 'https://secweb.cs.odu.edu/~zeil/ivyrepo'
        }

	maven {
            url "https://plugins.gradle.org/m2/"
        }


    }
    dependencies {
        classpath 'org.ysb33r.gradle:doxygen:0.3.2'
	
        classpath "org.hidetake:gradle-ssh-plugin:2.5.0+"
        classpath "edu.odu.cs.zeil:report_accumulator:1.2+"

        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"

    }
    
}

import edu.odu.cs.zeil.report_accumulator.ReportStats
import edu.odu.cs.zeil.report_accumulator.ReportsDeploy

apply plugin: "org.hidetake.ssh"

apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'org.ysb33r.doxygen'

apply plugin: "jacoco"

apply plugin: "findbugs"
apply plugin: "pmd"
apply plugin: "com.github.spotbugs"

apply plugin: "checkstyle"


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-library:1.3"	
    testCompile "org.jsoup:jsoup:1.12.1"
    testCompile "org.apache.poi:poi:3.12+"
    testCompile "org.apache.poi:poi-ooxml:3.12+"
    testCompile "com.cedarsoftware:json-io:4.10.1"
    compile "com.cedarsoftware:json-io:4.10.1"
}

jar {
    baseName = 'WebAnalysis'
    manifest {
        attributes 'Main-Class': 'edu.odu.cs.cs350.AnalysisInputManager'
    }
    from configurations.runtime.collect { zipTree(it) }
}

test {
    testLogging {
        events "passed","skipped", "failed", "standardOut", "standardError"
    }

    reports {
        html.enabled = true
    }    
     ignoreFailures = true

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    jacoco {
        append = false
    }
}

javadoc {
    failOnError false    
}
               

/*
doxygen {
    generate_html true

    source new File(projectDir,'src/main/java')
    //source new File(projectDir,'src/test/java')
    outputDir new File(buildDir,'docs')
}
*/

findbugsMain {
    ignoreFailures true
    reports {
        xml.enabled false
        html.enabled true
    }
}

findbugsTest {
    ignoreFailures true
    reports {
        xml.enabled false
        html.enabled true
    }
}

pmd {
    ignoreFailures = true
    ruleSets = [
        "java-basic",
        "java-braces",
        //"java-clone",
        "java-codesize",
        //"java-comments",
        //"java-controversial",
        //"java-coupling",
        //"java-design",
        "java-empty",
        //"java-finalizers",
        "java-imports",
        //"java-junit",
        "java-naming",
        //"java-optimizations",
        "java-strictexception",
        "java-strings",
        "java-sunsecure",
        "java-typeresolution",
        "java-unnecessary",
        "java-unusedcode"
    ]
}


spotbugsMain {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'medium'
    reports {
       xml.enabled = false
       html.enabled = true
    }
}


jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
    }
}

checkstyle {
    html.destination project.file("build/reports/checkstyle/main.html")
    toolVersion '8.11'
    ignoreFailures = true
    showViolations = false
}

tasks.withType(Checkstyle) {
    reports {
        html.destination project.file("build/reports/checkstyle/main.html")
    }
}

checkstyleTest.enabled = false
// End Checkstyle config

// Setup Statistics tasks
task collectStats (type: ReportStats, dependsOn: "build") {
    reportsURL = "http://www.cs.odu.edu/~ratwell/cs350/WebsiteAnalysis/"
}

// Deploy csv stats files
task report (type: ReportsDeploy, dependsOn: "collectStats") {
    // Test locally on atria
    deployDestination = "/home/ratwell/secure_html/cs350/WebsiteAnalysis"
}